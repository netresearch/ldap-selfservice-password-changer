# Only run fast checks in pre-commit hook
# Heavy tests run in CI

echo "Running pre-commit checks..."

# Format check (fast)
if command -v pnpm >/dev/null 2>&1; then
  echo "→ Checking code formatting..."
  pnpm prettier --check . || {
    echo "❌ Formatting check failed. Run: pnpm prettier --write ."
    exit 1
  }
fi

# TypeScript check (fast)
if [ -f package.json ] && command -v pnpm >/dev/null 2>&1; then
  echo "→ Checking TypeScript types..."
  pnpm js:build || {
    echo "❌ TypeScript check failed"
    exit 1
  }
fi

# ESLint check
if [ -f package.json ] && command -v pnpm >/dev/null 2>&1; then
  echo "→ Running ESLint..."
  pnpm lint || {
    echo "⚠️  ESLint found issues. Fix them before pushing!"
    echo "Run: pnpm lint:fix"
    # Don't exit 1 yet - ESLint has many existing issues
    # Remove this comment once issues are fixed
  }
fi

# golangci-lint (fast preset)
if [ -f go.mod ] && command -v golangci-lint >/dev/null 2>&1; then
  echo "→ Running golangci-lint (fast)..."
  golangci-lint run --fast --timeout=2m || {
    echo "⚠️  golangci-lint found issues"
    echo "Run: golangci-lint run"
    # Warning only for now
  }
fi

# Go vet (fast - backup if golangci-lint not installed)
if [ -f go.mod ] && command -v go >/dev/null 2>&1; then
  if ! command -v golangci-lint >/dev/null 2>&1; then
    echo "→ Running go vet..."
    go vet ./... || {
      echo "❌ Go vet failed"
      exit 1
    }
  fi
fi

# Go tests (can be slow, but important)
if [ -f go.mod ] && command -v go >/dev/null 2>&1; then
  echo "→ Running Go tests..."
  go test ./... || {
    echo "❌ Go tests failed"
    exit 1
  }
fi

echo "✅ Pre-commit checks passed"
